name: Build tdfs CLI

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { runner: macos-latest,  os: darwin,  arch: amd64}
          - { runner: macos-latest,  os: darwin,  arch: arm64}
          - { runner: ubuntu-latest, os: linux,   arch: amd64}
          - { runner: ubuntu-latest, os: linux,   arch: arm64}
    steps:
      - uses: actions/checkout@v4

      - name: Use Go 1.23.0
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.0

      - name: Build tdfs (${{ matrix.os }} / ${{ matrix.arch }})
        run: |
          env GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=0 go build -ldflags="-X 'github.com/2DFS/2dfs-builder/cmd.Version=${{ github.ref_name }}'" -o tdfs internal/tdfs.go

      - name: Package Artifacts
        run: |
          mkdir -p tdfs_${{ matrix.os }}_${{ matrix.arch }}
          cp tdfs tdfs_${{ matrix.os }}_${{ matrix.arch }}
          tar -czvf tdfs_${{ matrix.os }}_${{ matrix.arch }}.tar.gz -C tdfs_${{ matrix.os }}_${{ matrix.arch }} .

      - name: Release Artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          append_body: true
          prerelease: true
          files: |
            tdfs_${{ matrix.os }}_${{ matrix.arch }}.tar.gz

